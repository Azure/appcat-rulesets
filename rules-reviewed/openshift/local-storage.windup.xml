<?xml version="1.0"?>
<ruleset id="local-storage" xmlns="http://windup.jboss.org/schema/jboss-ruleset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This is a ruleset for openshift readiness suggestions while migrating to openshift environment.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,2.7.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,2.7.0.Final" />
        </dependencies>
        <targetTechnology id="openshift" />
        <tag>reviewed-2016-10-25</tag>
    </metadata>
    <rules>
        <rule id="local-storage-00001">
            <when>
                <or>
                    <javaclass references="java.io.{ioclass}{*}">
                        <location>CONSTRUCTOR_CALL</location>
                    </javaclass>
                    <javaclass references="java.util.zip.ZipFile{*}">
                        <location>CONSTRUCTOR_CALL</location>
                    </javaclass>
                    <javaclass references="java.io.File.createTempFile({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="java.nio.file.Paths.get({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="Java APIs for local file system" effort="1" severity="optional">
                    <message>Java applications often make use of local storage, sometimes for **temporary files** and **caching**, but frequently for more **long-lived assets** as well.
                        Some cloud platforms permit access to the local storage, but it is **ephemeral** and _disappears_ when the server instance is shut down.
                        Other cloud platforms (like _Microsoft Azure_) don’t provide access to local storage at all.
                        A cloud migration is the perfect time to **re-evaluate your storage strategy**.
                        Replacing **local storage** use with a _database_ is a _more reliable way to track temporary and cached data_.
                        Use of _cloud-native network storage_ are **much better alternatives** than local storage in most cases.
                        Either way, it is critical to find where your application uses local files, and to carefully considering how this would work in a cloud environment.
                    </message>
                </hint>
            </perform>
            <where param="ioclass">
                <matches pattern="(FileWriter|FileReader|PrintStream|File|PrintWriter|RandomAccessFile)"/>
            </where>
        </rule>
        <rule id="local-storage-00002">
            <when>
                <javaclass references="java.net.{class}{*file*}">
                    <location>CONSTRUCTOR_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Used class java.net.URL/URI with local path" effort="1" severity="optional">
                    <message>Cloud environment **should not** use local storage, but instead **database** or **cloud file services**.</message>
                </hint>
            </perform>
            <where param="class">
                <matches pattern="(URL|URI)" />
            </where>
        </rule>
        <rule id="local-storage-00003">
            <when>
                <filecontent pattern="{path}" filename="{*}"/>
            </when>
            <perform>
                <hint title="Detected local file system paths" effort="1" severity="potential">
                    <message>Applications often make use of local storage, sometimes for **temporary files** and **caching**, but frequently for more **long-lived assets** as well.
                        Some cloud platforms permit access to the local storage, but it is **ephemeral** and _disappears_ when the server instance is shut down.
                        Other cloud platforms (like _Microsoft Azure_) don’t provide access to local storage at all.
                        A cloud migration is the perfect time to **re-evaluate your storage strategy**.
                        Replacing **local storage** use with a _database_ is a _more reliable way to track temporary and cached data_.
                        Use of _cloud-native network storage_ are **much better alternatives** than local storage in most cases.
                        Either way, it is critical to find where your application uses local files, and to carefully considering how this would work in a cloud environment.
                    </message>
                </hint>
            </perform>
            <where param="path">
                <!--this regex tries to find all unix like absolute paths-->
                <matches pattern="[^/](\/[\w^ ]+)+\/?" />
            </where>
        </rule>
    </rules>
</ruleset>
