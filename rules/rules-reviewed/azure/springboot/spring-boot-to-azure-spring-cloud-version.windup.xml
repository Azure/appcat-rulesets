<?xml version="1.0" encoding="UTF-8"?>
<ruleset id="spring-boot-to-azure-spring-cloud-version"
         xmlns="http://windup.jboss.org/schema/jboss-ruleset"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            Recommend Spring cloud open source support version
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-xml,3.0.0.Final"/>
        </dependencies>
        <sourceTechnology id="springboot"/>
        <targetTechnology id="azure-spring-apps"/>
        <targetTechnology id="azure-aks"/>
        <targetTechnology id="azure-appservice"/>
        <targetTechnology id="azure-container-apps"/>
        <tag>version</tag>
    </metadata>
    <rules>
        <rule id="spring-boot-to-azure-spring-cloud-version-01000">
            <when>
                <project>
                    <artifact groupId="org.springframework.cloud" artifactId="spring-cloud-dependencies" fromVersion="Angel" toVersion="Edgware.9"/>
                </project>
            </when>
            <perform>
                <hint title="Spring Cloud version too low" category-id="potential" effort="5">
                    <message>
                        The application is using a Spring Cloud version that is too low. To get the best experience, consider upgrading to a supported version of Spring Cloud.

                        Here are some steps you can take:

                        * Choose a **supported Spring Cloud version**: Check out the Spring Cloud Supported Versions page to determine the most suitable supported version.

                        * **Update Spring Cloud version**: Update the Spring Cloud version of your application. There are automated tools like Rewrite to help you with the migration.

                        * **Address code compatibility**: Review your application's codebase for any potential compatibility issues with the target Spring Cloud version. Update deprecated APIs or features, address any language or library changes, and ensure that your code follows best practices and standards.

                        * **Test thoroughly**: Execute a comprehensive testing process to verify the compatibility and functionality of your application with the new Spring Cloud version. Perform unit tests, integration tests, and system tests to validate that all components and dependencies work as expected.
                    </message>
                    <link title="Azure Spring Apps Spring Boot Version Support" href="https://learn.microsoft.com/azure/spring-apps/concept-app-customer-responsibilities#spring-boot-and-spring-cloud-versions"/>
                    <link title="Spring Cloud" href="https://spring.io/projects/spring-cloud"/>
                    <link title="Spring Cloud Supported Versions" href="https://github.com/spring-cloud/spring-cloud-release/wiki/Supported-Versions"/>
                    <link title="Use Rewrite to migrate to Spring Cloud 2022" href="https://docs.openrewrite.org/recipes/java/spring/cloud2022/upgradespringcloud_2022"/>
                </hint>
            </perform>
        </rule>
        <rule id="spring-boot-to-azure-spring-cloud-version-02000">
            <when>
                <project>
                    <artifact groupId="org.springframework.cloud" artifactId="spring-cloud-dependencies" fromVersion="Finchley" toVersion="2020.99"/>
                </project>
            </when>
            <perform>
                <hint title="spring cloud version out of support" category-id="information" effort="2">
                    <message>
                        The application is using a Spring Cloud version that is no longer supported. To get the best experience, consider upgrading to a supported version of Spring Cloud.

                        Here are some steps you can take to update your application to a supported version of Spring Cloud:

                        * Choose a **supported Spring Cloud version**: Check out the Spring Cloud Supported Versions page to determine the most suitable supported version.

                        * **Update Spring Cloud version**: Update the Spring Cloud version of your application. There are automated tools like Rewrite to help you with the migration.

                        * **Address code compatibility**: Review your application's codebase for any potential compatibility issues with the target Spring Cloud version. Update deprecated APIs or features, address any language or library changes, and ensure that your code follows best practices and standards.

                        * **Test thoroughly**: Execute a comprehensive testing process to verify the compatibility and functionality of your application with the new Spring Cloud version. Perform unit tests, integration tests, and system tests to validate that all components and dependencies work as expected.
                    </message>
                    <link title="Azure Spring Apps Spring Boot Version Support" href="https://learn.microsoft.com/azure/spring-apps/concept-app-customer-responsibilities#spring-boot-and-spring-cloud-versions"/>
                    <link title="Spring Cloud" href="https://spring.io/projects/spring-cloud"/>
                    <link title="Spring Cloud Supported Versions" href="https://github.com/spring-cloud/spring-cloud-release/wiki/Supported-Versions"/>
                    <link title="Use Rewrite to migrate to Spring Cloud 2022" href="https://docs.openrewrite.org/recipes/java/spring/cloud2022/upgradespringcloud_2022"/>
                </hint>
            </perform>
        </rule>
    </rules>
</ruleset>
