<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="hibernate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">

    <metadata>
        <description>
            This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,2.3.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,2.3.0.Final" />
        </dependencies>
        <sourceTechnology id="hibernate" versionRange="[,3.9)" />
        <targetTechnology id="hibernate" versionRange="[4,)" />
        <tag>reviewed-2015-06-18</tag>
    </metadata>

    <rules>
        <rule id="hibernate-01000">
            <when>
                <javaclass references="org.hibernate.annotations.Type" matchesSource="{*}text{*}" />
            </when>
            <perform>
                <iteration>
                    <hint title="@Type(type=text) is deprecated in Hibernate 4" effort="1" severity="mandatory">
                        <message>
                            In versions of Hibernate prior to 3.5, text type was mapped to JDBC CLOB. A new Hibernate type, materialized_clob, was added in Hibernate 4 to map Java String properties to JDBC CLOB. Therefore, Hibernate 4 text LOB type definitions should be defined using `@Lob`, instead.
                        </message>
                        <link href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html/Migration_Guide/Migrate_Your_Hibernate_33x_Application_to_Hibernate_4x.html" title="Hibernate 4 java @Type migration." />
                    </hint>
                </iteration>
            </perform>
        </rule>	
	<rule id="hibernate-02000">
            <when>
                <javaclass references="org.hibernate.criterion.Projections.{method}{*}">
			<location>METHOD_CALL</location>
		</javaclass>
            </when>
            <perform>
                    <hint title="Hibernate 4 projection return types" effort="1" severity="optional">
                        <message>
                            The return types of the numeric aggregate criteria projections has changed to Long in hibernate 4. This change may introduce conflicts in the code.
                        </message>
                        <link href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6.1/html/Migration_Guide/Migrate_Your_Hibernate_33x_Application_to_Hibernate_4x.html" title="Hibernate 4 projections return type change." />
                    </hint>
            </perform>
	    <where param="method"><matches pattern="(count|rowCount|sum)" /></where>
        </rule>
	<rule id="hibernate-03000">
            <when>
                <javaclass references="org.hibernate.cfg.AnnotationConfiguration{*}">
			<location>CONSTRUCTOR_CALL</location>
		</javaclass>
            </when>
            <perform>
                <iteration>
                    <hint title="The initial naming strategy was changed from DefaultNamingStrategy to EJB3NamingStrategy in Hibernate 4" effort="1" severity="optional">
                        <message>
                            The initial/default naming strategy in Hibernate 4 was changed from DefaultNamingStrategy to EJB3NamingStrategy. This can result in naming mismatches. If you rely on the naming strategy, call Configuration#setNamingStrategy.
                        </message>
                        <link href="https://access.redhat.com/documentation/en-US/JBoss_Enterprise_Application_Platform/6/html/Migration_Guide/Migrate_Your_Hibernate_3.5.x_Application_to_Hibernate_4.x.html" title="Hibernate 4 naming strategy change documentation." />
                    </hint>
                </iteration>
            </perform>
        </rule>
    </rules>
</ruleset>
