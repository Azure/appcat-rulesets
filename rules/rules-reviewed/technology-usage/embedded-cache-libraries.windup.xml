<?xml version="1.0"?>
<ruleset id="embedded-cache-libraries" xmlns="http://windup.jboss.org/schema/jboss-ruleset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This ruleset detects embedded cache libraries, which may be problematic when migrating an application to a cloud environment.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final" />
        </dependencies>
    </metadata>
    <rules>
        <rule id="embedded-cache-libraries-01000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*ehcache.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="EHCache library" category-id="potential" effort="5">
                    <description>
                        The application uses EHCache. Azure does not have a managed service for EHCache. You either have to set up the EHCache distribution on Azure yourself, or you can take advantage of a managed Redis service if you are ready to migrate from EHCache to Redis. Azure Cache for Redis offers scalability, high availability, and monitoring capabilities. **Azure Cache for Redis** provides features like data persistence, automatic failover, and built-in support for Redis commands, allowing you to leverage the benefits of Redis caching in your application running on Azure.

                        * **Provision an Azure Cache for Redis**: Configure the cache size and other relevant settings based on your application's requirements.

                        * **Update your Java code**: Replace the EHCache code in your Java application with the Azure Cache for Redis client libraries or SDKs. Update the code that establishes a connection to the Redis cache and performs cache-related operations.

                        * **Connect to Azure Cache for Redis**: Update the connection details in your Java application to point to the Azure Cache for Redis instance. Use the connection information provided by Azure (hostname, port, access keys, etc.) to establish a connection from your application.
                    </description>
                    <link title="Azure Cache for Redis documentation" href="https://learn.microsoft.com/azure/azure-cache-for-redis"/>
                    <link title="Caching guidance" href="https://learn.microsoft.com/azure/architecture/best-practices/caching"/>
                </classification>
                <technology-tag level="INFORMATIONAL">Ehcache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-16000">
            <when>
                <or>
                    <file filename="{*}redis{*}.jar"/>
                    <project>
                        <artifact groupId="org.springframework.boot" artifactId="spring-boot-starter-data-redis"/>
                    </project>
                    <project>
                        <artifact groupId="org.springframework.data" artifactId="spring-data-redis"/>
                    </project>
                    <project>
                        <artifact groupId="org.springframework.session" artifactId="spring-session-data-redis"/>
                    </project>
                    <project>
                        <artifact groupId="org.springframework.integration" artifactId="spring-integration-redis"/>
                    </project>
                </or>
            </when>
            <perform>
                <hint title="Redis Cache library" category-id="potential" effort="3">
                    <message>
                        The application uses a Redis cache. You can take advantage of a managed Redis service that offers scalability, high availability, and monitoring capabilities. **Azure Cache for Redis** provides features like data persistence, automatic failover, and built-in support for Redis commands, allowing you to leverage the benefits of Redis caching in your application running on Azure.

                        * **Provision an Azure Cache for Redis**: Configure the cache size and other relevant settings based on your application's requirements.

                        * **Update your Java code**: Replace the embedded Redis cache code in your Java application with the Azure Cache for Redis client libraries or SDKs. Update the code that establishes a connection to the Redis cache and performs cache-related operations.

                        * **Connect to Azure Cache for Redis**: Connect your app to Azure Cache for Redis on azure by **Service Connector**. Use the connection information provided by Azure (hostname, port, access keys, etc.) to create a connection from your application.
                    </message>
                    <link title="Azure Cache for Redis documentation" href="https://learn.microsoft.com/azure/azure-cache-for-redis"/>
                    <link title="Caching guidance" href="https://learn.microsoft.com/azure/architecture/best-practices/caching"/>
                    <link title="Connect Azure Cache for Redis to your application in Azure Spring Apps" href="https://learn.microsoft.com/azure/spring-apps/how-to-bind-redis?tabs=Java%2CService-Connector"/>
                    <link title="Redis Cache found in the application" href="https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#identify-external-caches"/>
                    <link title="Spring Data Redis" href="https://spring.io/projects/spring-data-redis/"/>
                    <link title="Azure Spring Cloud Starter Cache" href="https://search.maven.org/artifact/com.azure.spring/azure-spring-cloud-starter-cache"/>
                </hint>
                <technology-tag level="INFORMATIONAL">Redis</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-02000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*coherence.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Coherence embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a Coherence library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Coherence</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-03000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*commons-jcs.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Apache Commons JCS embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds an Apache Commons JCS library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Apache Commons JCS</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-04000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*dynacache.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Dynacache embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a Dynacache library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Dynacache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-05000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*cache-api.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a library that provides caching.
                   </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Cache API</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-06000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*hazelcast.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Hazelcast embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a Hazelcast library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Hazelcast</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-07000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*ignite.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Apache Ignite embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds an Apache Ignite library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Apache Ignite</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-08000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*infinispan.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Infinispan embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds an Infinispan library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Infinispan</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-09000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*jbosscache.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="JBoss Cache embedded library" category-id="information" effort="0">
                    <description>
                        The application embedds a JBoss Cache library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">JBoss Cache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-10000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*jcache.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="JCache embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a JCache library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">JCache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-11000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*memcached.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Memcached client embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a Memcached client library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Memcached client</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-12000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*oscache.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="Oscache embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds an Oscache library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Oscache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-13000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*shiftone.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="ShiftOne (Java Object Cache) embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a ShiftOne library (Java Object Cache or JOCache).
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">ShiftOne</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-14000">
            <when>
                <graph-query discriminator="JarArchiveModel">
                    <property name="fileName" searchType="regex">.*swarmcache.*\.jar$</property>
                </graph-query>
            </when>
            <perform>
                <classification title="SwarmCache embedded library" category-id="information" effort="0">
                    <description>
                        The application embeds a SwarmCache library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">SwarmCache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-15000">
            <when>
                <or>
                    <dependency groupId="org.springframework.boot" artifactId="spring-boot-starter-cache"/>
                    <project>
                        <artifact groupId="org.springframework.boot" artifactId="spring-boot-starter-cache"/>
                    </project>
                </or>
            </when>
            <perform>
                <classification title="Spring Boot Cache library" category-id="information" effort="0">
                    <description>
                        The application embeds the Spring Boot Cache library.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Spring Boot Cache</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-cache-libraries-16000">
            <when>
                <file filename="{*}redis{*}.jar"/>
            </when>
            <perform>
                <classification title="Redis Cache library" category-id="information" effort="0">
                    <description>
                        The application embeds the Redis client.
                    </description>
                </classification>
                <technology-tag level="INFORMATIONAL">Redis</technology-tag>
            </perform>
        </rule>
    </rules>
</ruleset>