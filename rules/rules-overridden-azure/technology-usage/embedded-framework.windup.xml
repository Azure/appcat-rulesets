<?xml version="1.0" encoding="UTF-8"?>
<ruleset id="embedded-framework"
         xmlns="http://windup.jboss.org/schema/jboss-ruleset"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This ruleset provides analysis of embedded frameworks.
            This ruleset overrides the rules/rules-reviewed/technology-usage/embedded-framework.windup.xml ruleset.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,3.0.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,3.0.0.Final" />
        </dependencies>
        <targetTechnology id="azure-spring-apps"/>
        <targetTechnology id="azure-appservice"/>
        <targetTechnology id="azure-aks"/>
        <targetTechnology id="azure-container-apps"/>
        <targetTechnology id="discovery"/>
        <overrideRules>true</overrideRules>
    </metadata>
    <rules>
        <rule id="embedded-framework-09000">
            <when>
                <or>
                    <file filename="feign-{*}.jar"/>
                    <project>
                        <artifact groupId="com.netflix.feign" artifactId="{*}"/>
                    </project>
                    <project>
                        <artifact groupId="org.springframework.cloud" artifactId="spring-cloud-starter-feign"/>
                    </project>
                </or>
            </when>
            <perform>
                <hint title="Embedded framework - Feign" category-id="information" effort="0">
                    <message>
                        The application embeds the Feign framework. If you are migrating to Azure Spring Apps, it is recommended to use Spring Cloud OpenFeign instead (Spring Cloud Feign has been deprecated).
                        
                        When migrating to Azure Spring Apps, Eureka (Standard Tier) or Service Registry (Enterprise Tier) will be hosted for you. Spring Cloud OpenFeign will easily discover the service registry and invoke the services.
                    </message>
                    <link title="Migrate clients bypassing the service registry" href="https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-apps?pivots=sc-standard-tier#identify-clients-that-bypass-the-service-registry"/>
                    <link title="Spring Cloud OpenFeign" href="https://spring.io/projects/spring-cloud-openfeign/"/>
                </hint>
                <technology-tag level="INFORMATIONAL">Feign</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-framework-09100">
            <when>
                <or>
                    <file filename="{*}zipkin{*}.jar"/>
                    <project>
                        <artifact groupId="org.springframework.boot" artifactId="spring-cloud-starter-zipkin"/>
                    </project>
                    <project>
                        <artifact groupId="io.zipkin{*}" artifactId="{*}"/>
                    </project>
                </or>
            </when>
            <perform>
                <hint title="Embedded framework - Zipkin" category-id="information" effort="0">
                    <message>
                        The application embeds the Zipkin framework. To migrate a Java application that uses Zipkin to Azure, it is recommended to use Azure Monitor instead.
                        
                        * **Identify Zipkin dependencies**: Identify the Zipkin dependencies in your application.

                        * **Replace with Azure Monitor**: Azure Monitor provides distributed tracing capabilities. Azure services such as Azure Spring Apps, Azure Kubernetes Service, Azure App Service support auto-instrumentation for Azure Monitor.
                    </message>
                    <link title="Azure Monitor" href="https://learn.microsoft.com/azure/azure-monitor/"/>
                    <link title="Spring Boot to Azure - identify Zipkin dependencies" href="https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-apps?pivots=sc-standard-tier#identify-zipkin-dependencies"/>
                    <link title="Use Application Insights Java In-Process Agent in Azure Spring Apps" href="https://learn.microsoft.com/azure/spring-apps/how-to-application-insights"/>
                    <link title="Distributed Tracing" href="https://learn.microsoft.com/azure/azure-monitor/app/distributed-trace-data"/>
                </hint>
                <technology-tag level="INFORMATIONAL">Zipkin</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-framework-09300">
            <when>
                <or>
                    <file filename="{*}eureka-client{*}.jar"/>
                    <project>
                        <artifact groupId="{*}" artifactId="{*}eureka-client{*}"/>
                    </project>
                </or>
            </when>
            <perform>
                <hint title="Embedded framework - Eureka Client" category-id="information" effort="0">
                    <message>
                        The application embeds the Eureka client. If you are migrating to Azure Spring Apps, the connection info of Eureka will be injected upon app start.
                        
                        Find any explicit configurations of config server connection info:

                        If configured in **configuration files**: they will be ignored and overrided by Azure Spring Apps.

                        If configured in **command line parameters**, **Java system attribute**, **environment variable**: they need to be removed or you might experience conflicts and unexpected behavior.
                    </message>
                    <link title="Azure Spring Apps - Enable Service Registration" href="https://learn.microsoft.com/azure/spring-apps/how-to-service-registration?pivots=programming-language-java"/>
                    <link title="Azure Spring Apps - Access Config Server and Service Registry" href="https://learn.microsoft.com/azure/spring-apps/how-to-access-data-plane-azure-ad-rbac"/>
                    <link title="Restricted configurations" href="http://aka.ms/spring-cloud-to-asa?pivots=sc-standard-tier#remove-restricted-configurations"/>
                </hint>
                <technology-tag level="INFORMATIONAL">Eureka</technology-tag>
            </perform>
        </rule>
        <rule id="embedded-framework-09400">
            <when>
                <or>
                    <file filename="{*}eureka-server{*}.jar"/>
                    <project>
                        <artifact groupId="{*}" artifactId="{*}eureka-server{*}"/>
                    </project>
                </or>
            </when>
            <perform>
                <hint title="Embedded framework - Eureka Server" category-id="information" effort="0">
                    <message>
                        The application embeds the Eureka server. If you are migrating to Azure Spring Apps, Eureka (Standard Tier) or Service Registry (Enterprise Tier) will be hosted for you.
                    </message>
                    <link title="Azure Spring Apps - Don't include the Spring Cloud registry" href="https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-apps?toc=%2Fazure%2Fspring-apps%2Ftoc.json&amp;bc=%2Fazure%2Fspring-apps%2Fbreadcrumb%2Ftoc.json&amp;pivots=sc-standard-tier#create-an-azure-spring-apps-instance-and-apps"/>
                    <link title="Azure Spring Apps - Enable Service Registration" href="https://learn.microsoft.com/azure/spring-apps/how-to-service-registration?pivots=programming-language-java"/>
                    <link title="Azure Spring Apps - Access Config Server and Service Registry" href="https://learn.microsoft.com/azure/spring-apps/how-to-access-data-plane-azure-ad-rbac"/>
                    <link title="Restricted configurations" href="http://aka.ms/spring-cloud-to-asa?pivots=sc-standard-tier#remove-restricted-configurations"/>
                </hint>
                <technology-tag level="INFORMATIONAL">Eureka</technology-tag>
            </perform>
        </rule>
    </rules>
</ruleset>
