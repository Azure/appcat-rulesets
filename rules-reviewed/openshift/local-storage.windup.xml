<?xml version="1.0"?>
<ruleset id="local-storage" xmlns="http://windup.jboss.org/schema/jboss-ruleset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">
    <metadata>
        <description>
            This is a ruleset for OpenShift readiness suggestions while migrating to OpenShift environment.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,2.7.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,2.7.0.Final" />
        </dependencies>
        <targetTechnology id="openshift" />
        <tag>openshift</tag>
        <tag>reviewed-2016-10-27</tag>
    </metadata>
    <rules>
        <rule id="local-storage-00001">
            <when>
                <or>
                    <javaclass references="java.io.{ioclass}{*}">
                        <location>CONSTRUCTOR_CALL</location>
                    </javaclass>
                    <javaclass references="java.util.zip.ZipFile{*}">
                        <location>CONSTRUCTOR_CALL</location>
                    </javaclass>
                    <javaclass references="java.io.File.createTempFile({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="java.nio.file.Paths.get({*})">
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="Java APIs for local file system" effort="1" category-id="optional">
                    <message>Access to local storage on Openshift platform should be minimized and wherever possible replaced by using a **database storage** or by **cloud-native network storage**.

Openshift offer great portability to applications across  deployment environments, but containers are ephemeral by design. So local files are **transient** and could _disappear_ when a server instance or container fails.

An OpenShift migration is the perfect time to **re-evaluate** local file storage strategy.
It is critical to do an audit and find where your application uses local files, and carefully design how this would work for your application(s) in an OpenShift environment.
                    </message>
                </hint>
            </perform>
            <where param="ioclass">
                <matches pattern="(FileWriter|FileReader|PrintStream|File|PrintWriter|RandomAccessFile)"/>
            </where>
        </rule>
        <rule id="local-storage-00002">
            <when>
                <javaclass references="java.net.{class}{*file*}">
                    <location>CONSTRUCTOR_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Used class java.net.URL/URI with local path" effort="1" category-id="optional">
                    <message>OpenShift environment **should not** use local storage for persistent data, but instead of that use a **database** or **cloud native network file services**.</message>
                </hint>
            </perform>
            <where param="class">
                <matches pattern="(URL|URI)" />
            </where>
        </rule>
        <rule id="local-storage-00003">
            <when>
                <filecontent pattern="{path}" filename="{*}"/>
            </when>
            <perform>
                <hint title="Detected local file system paths" effort="1" category-id="potential">
                    <message>Paths to local file(s) are sometimes used for **temporary files** or **caching**, but frequently for **persistent** data as well.
                        File local storage is **transient** and could _disappear_ when the server instance is stopped/replaced/restarted. 
                    No matter what you decide to use, it is critical to do an inventory and locate all possible local files storage accesses, and think about what you need to change in design in your application for Openshift environment.
                    </message>
                </hint>
            </perform>
            <where param="path">
                <!--this regex tries to find all unix like absolute paths-->
                <matches pattern="[^/](\/[\w^ ]+)+\/?" />
            </where>
        </rule>
    </rules>
</ruleset>
